apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    app: pgadmin-depl
  name: pgadmin-depl
spec:
  replicas: 1
  selector:
    matchLabels:
      app: pgadmin
  strategy: {}
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: pgadmin
    spec:
      containers:
        - image: dpage/pgadmin4
          ports:
            - containerPort: 80
          name: pgadmin4
          volumeMounts:
            - name: pgadmin-data
              mountPath: /var/lib/pgadmin
          resources: {}
          env:
            - name: PGADMIN_DEFAULT_EMAIL
              valueFrom:
                configMapKeyRef:
                  name: pgadmin-env
                  key: PGADMIN_DEFAULT_EMAIL
            - name: PGADMIN_DEFAULT_PASSWORD
              valueFrom:
                configMapKeyRef:
                  name: pgadmin-env
                  key: PGADMIN_DEFAULT_PASSWORD
      volumes:
        - name: pgadmin-data
          persistentVolumeClaim:
            claimName: pgadmin
status: {}
---
apiVersion: v1
kind: Service
metadata:
  name: pgadmin-srv
spec:
  selector:
    app: pgadmin
  type: NodePort
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
      nodePort: 30200
---
kind: PersistentVolume
apiVersion: v1
metadata:
  name: pgadmin-pv
  labels:
    type: local
spec:
  storageClassName: manual
  capacity:
    storage: 4Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: "/mnt/data/pgadmin"
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: pgadmin
  labels:
    app: pgadmin
  annotations:
    volume.alpha.kubernetes.io/storage-class: default
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 4Gi